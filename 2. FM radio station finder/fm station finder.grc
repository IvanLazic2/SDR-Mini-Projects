options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: fm_station_finder
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: audio_gain_slider
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Audio gain
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '0.1'
    stop: '2'
    value: '1'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 552.0]
    rotation: 0
    state: enabled
- name: center_freq
  id: variable
  parameters:
    comment: ''
    value: 98e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 8.0]
    rotation: 0
    state: enabled
- name: channel_width
  id: variable
  parameters:
    comment: ''
    value: 200e3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352, 8.0]
    rotation: 0
    state: enabled
- name: current_freq
  id: variable
  parameters:
    comment: ''
    value: 95.8e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 8.0]
    rotation: 0
    state: enabled
- name: fft_size
  id: variable
  parameters:
    comment: ''
    value: '1024'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 8.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 20e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 8.0]
    rotation: 0
    state: enabled
- name: variable_qtgui_label_0
  id: variable_qtgui_label
  parameters:
    comment: ''
    formatter: None
    gui_hint: (1, 0, 1, 1)
    label: 'Station:'
    type: real
    value: current_freq
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1272, 552.0]
    rotation: 0
    state: enabled
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: center_freq - current_freq
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    showports: 'False'
    type: complex
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [120, 400.0]
    rotation: 0
    state: enabled
- name: analog_wfm_rcv_0
  id: analog_wfm_rcv
  parameters:
    affinity: ''
    alias: ''
    audio_decimation: '10'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    quad_rate: 480e3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 416.0]
    rotation: 0
    state: enabled
- name: audio_sink_0
  id: audio_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    device_name: ''
    num_inputs: '1'
    ok_to_block: 'True'
    samp_rate: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 544.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: fft_size
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 256.0]
    rotation: 0
    state: enabled
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
    log_level: info
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1304, 320.0]
    rotation: 0
    state: disabled
- name: blocks_msgpair_to_var_0
  id: blocks_msgpair_to_var
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    target: current_freq
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1536, 240.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: audio_gain_slider
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 488.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 416.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_vector_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fft_size
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 264.0]
    rotation: 0
    state: enabled
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [320, 248.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom scipy.signal import find_peaks\nfrom gnuradio\
      \ import gr\nimport pmt \n\nfrom collections import Counter\n\nclass StationFinder(gr.sync_block):\n\
      \    def __init__(self):\n        gr.sync_block.__init__(\n            self,\n\
      \            name=\"station_finder\",\n            in_sig=[(np.float32, 1024)],\n\
      \            out_sig=[]\n        )\n\n        self.fft_size = 1024\n       \
      \ self.samp_rate = 20e6\n        self.center_freq = 98e6\n        self.frames_per_scan\
      \ = 20000  # 1 sec at 20k vectors/sec\n        self.accumulator = np.zeros(self.fft_size,\
      \ dtype=np.float64)\n        self.frame_count = 0\n\n        self.station_freqs\
      \ = []\n        self.last_station_freqs = []\n\n        self.message_port_register_out(pmt.intern(\"\
      stations_out\"))\n\n    def work(self, input_items, output_items):\n       \
      \ in0 = input_items[0]\n        n = len(in0)\n\n        for i in range(n):\n\
      \            self.accumulator += in0[i]\n            self.frame_count += 1\n\
      \n            if self.frame_count >= self.frames_per_scan:\n               \
      \ avg_spectrum = self.accumulator / self.frames_per_scan\n                self.accumulator[:]\
      \ = 0\n                self.frame_count = 0\n\n                center_bin =\
      \ self.fft_size // 2\n                avg_spectrum[center_bin-2:center_bin+3]\
      \ = 0\n\n                norm_spectrum = avg_spectrum / np.max(avg_spectrum)\n\
      \n                peaks, _ = find_peaks(\n                    norm_spectrum,\n\
      \                    #    P_dB = 10 * log10(P_linear)\n                    #\
      \ => P_linear = 10 ** (p_dB / 10)\n                    # Noise: -71dB\n    \
      \                # Weak: -67dB => 4dB above noise\n                    # Strong:\
      \ -49dB\n                    prominence=0.05, # 0.07\n                    distance=20\n\
      \                )\n\n                if len(peaks) > 0:\n                 \
      \   freqs = np.linspace(\n                        self.center_freq - self.samp_rate\
      \ / 2,\n                        self.center_freq + self.samp_rate / 2,\n   \
      \                     self.fft_size\n                    )\n               \
      \     peak_freqs = freqs[peaks]\n                    peak_freqs_khz = np.round(peak_freqs\
      \ / 1000) * 1000\n\n                    self.last_station_freqs = self.station_freqs\n\
      \                    self.station_freqs = np.unique(peak_freqs_khz.astype(np.float32))\n\
      \n                    if Counter(self.last_station_freqs) == Counter(self.station_freqs):\n\
      \                        break\n\n                    self.station_freqs = np.sort(self.station_freqs)\n\
      \n                    pmt_msg = pmt.init_f32vector(len(self.station_freqs),\
      \ self.station_freqs)\n                    self.message_port_pub(pmt.intern(\"\
      stations_out\"), pmt_msg)\n\n        return n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('station_finder', 'StationFinder', [], [('0', 'float', 1024)], [('stations_out',
      'message', 1)], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1080, 264.0]
    rotation: 0
    state: enabled
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport pmt\n\nfrom\
      \ collections import Counter\n\nclass station_handler(gr.basic_block):\n   \
      \ def __init__(self):\n        gr.basic_block.__init__(self,\n            name=\"\
      station_handler\",\n            in_sig=None,\n            out_sig=None)\n\n\
      \        self.message_port_register_in(pmt.intern(\"stations_in\"))\n      \
      \  self.set_msg_handler(pmt.intern(\"stations_in\"), self.handle_stations)\n\
      \n        self.message_port_register_in(pmt.intern(\"cmd_in\"))\n        self.set_msg_handler(pmt.intern(\"\
      cmd_in\"), self.handle_command)\n\n        self.stations = []\n        self.last_stations\
      \ = []\n        self.current_index = 0\n\n        self.current_freq = 0\n  \
      \      self.last_freq = 0\n\n        self.message_port_register_out(pmt.intern(\"\
      freq_out\"))\n\n\n    def handle_stations(self, msg):\n        if pmt.is_f32vector(msg):\n\
      \            freqs = sorted(set(pmt.to_python(msg)))\n        else:\n      \
      \      return\n\n        if not freqs:\n            return\n\n        self.last_freq\
      \ = self.current_freq\n        self.current_freq = self.stations[self.current_index]\
      \ if self.stations else None\n\n        self.last_stations = self.stations\n\
      \        self.stations = freqs\n\n        if Counter(self.last_stations) ==\
      \ Counter(self.stations):\n            return\n\n        if self.last_freq ==\
      \ self.current_freq:\n            return\n\n        if self.current_freq in\
      \ self.stations:\n            self.current_index = self.stations.index(self.current_freq)\n\
      \        \n        if self.current_index >= len(self.stations):\n          \
      \  return\n        \n        self.set_freq(self.stations[self.current_index])\n\
      \n\n    def handle_command(self, msg):\n        if pmt.is_pair(msg):\n     \
      \       key = pmt.symbol_to_string(pmt.car(msg))\n            val = pmt.cdr(msg)\n\
      \n            if key == \"cmd\":\n                if pmt.is_symbol(val):\n \
      \                   cmd = pmt.symbol_to_string(val)\n                elif pmt.is_string(val):\n\
      \                    cmd = pmt.to_python(val)\n                else:\n     \
      \               return\n\n                if cmd == \"next\":\n            \
      \        self.step_next()\n                elif cmd == \"prev\":\n         \
      \           self.step_prev()\n\n\n    def step_next(self):\n        if not self.stations:\n\
      \            return\n        self.current_index = (self.current_index + 1) %\
      \ len(self.stations)\n        self.set_freq(self.stations[self.current_index])\n\
      \n    def step_prev(self):\n        if not self.stations:\n            return\n\
      \        self.current_index = (self.current_index - 1) % len(self.stations)\n\
      \        self.set_freq(self.stations[self.current_index])\n\n\n    def set_freq(self,\
      \ freq):\n        msg = pmt.cons(pmt.intern(\"freq\"), pmt.from_double(freq))\n\
      \        self.message_port_pub(pmt.intern(\"freq_out\"), msg)\n        print(f\"\
      Station {self.current_index + 1}/{len(self.stations)}: {freq / .1e7} MHz\")\n\
      \n    def get_freq(self):\n        return self.current_freq\n\n\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('station_handler', 'station_handler', [], [('cmd_in', 'message', 1),
      ('stations_in', 'message', 1)], [('freq_out', 'message', 1)], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1328, 232.0]
    rotation: 0
    state: enabled
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fft_size
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: window.blackmanharris(1024)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 224.0]
    rotation: 0
    state: enabled
- name: low_pass_filter_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: 75e3
    decim: int(samp_rate / channel_width)
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_ccf
    width: 25e3
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 372.0]
    rotation: 0
    state: enabled
- name: next_button
  id: variable_qtgui_msg_push_button
  parameters:
    comment: ''
    gui_hint: (0, 1, 1, 1)
    label: Next
    msgName: cmd
    relBackgroundColor: navy
    relFontColor: white
    type: string
    value: next
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1096, 136.0]
    rotation: 0
    state: enabled
- name: osmosdr_source_0
  id: osmosdr_source
  parameters:
    affinity: ''
    alias: ''
    ant0: ''
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    args: '""'
    bb_gain0: '20'
    bb_gain1: '20'
    bb_gain10: '20'
    bb_gain11: '20'
    bb_gain12: '20'
    bb_gain13: '20'
    bb_gain14: '20'
    bb_gain15: '20'
    bb_gain16: '20'
    bb_gain17: '20'
    bb_gain18: '20'
    bb_gain19: '20'
    bb_gain2: '20'
    bb_gain20: '20'
    bb_gain21: '20'
    bb_gain22: '20'
    bb_gain23: '20'
    bb_gain24: '20'
    bb_gain25: '20'
    bb_gain26: '20'
    bb_gain27: '20'
    bb_gain28: '20'
    bb_gain29: '20'
    bb_gain3: '20'
    bb_gain30: '20'
    bb_gain31: '20'
    bb_gain4: '20'
    bb_gain5: '20'
    bb_gain6: '20'
    bb_gain7: '20'
    bb_gain8: '20'
    bb_gain9: '20'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    corr0: '0'
    corr1: '0'
    corr10: '0'
    corr11: '0'
    corr12: '0'
    corr13: '0'
    corr14: '0'
    corr15: '0'
    corr16: '0'
    corr17: '0'
    corr18: '0'
    corr19: '0'
    corr2: '0'
    corr20: '0'
    corr21: '0'
    corr22: '0'
    corr23: '0'
    corr24: '0'
    corr25: '0'
    corr26: '0'
    corr27: '0'
    corr28: '0'
    corr29: '0'
    corr3: '0'
    corr30: '0'
    corr31: '0'
    corr4: '0'
    corr5: '0'
    corr6: '0'
    corr7: '0'
    corr8: '0'
    corr9: '0'
    dc_offset_mode0: '0'
    dc_offset_mode1: '0'
    dc_offset_mode10: '0'
    dc_offset_mode11: '0'
    dc_offset_mode12: '0'
    dc_offset_mode13: '0'
    dc_offset_mode14: '0'
    dc_offset_mode15: '0'
    dc_offset_mode16: '0'
    dc_offset_mode17: '0'
    dc_offset_mode18: '0'
    dc_offset_mode19: '0'
    dc_offset_mode2: '0'
    dc_offset_mode20: '0'
    dc_offset_mode21: '0'
    dc_offset_mode22: '0'
    dc_offset_mode23: '0'
    dc_offset_mode24: '0'
    dc_offset_mode25: '0'
    dc_offset_mode26: '0'
    dc_offset_mode27: '0'
    dc_offset_mode28: '0'
    dc_offset_mode29: '0'
    dc_offset_mode3: '0'
    dc_offset_mode30: '0'
    dc_offset_mode31: '0'
    dc_offset_mode4: '0'
    dc_offset_mode5: '0'
    dc_offset_mode6: '0'
    dc_offset_mode7: '0'
    dc_offset_mode8: '0'
    dc_offset_mode9: '0'
    freq0: center_freq
    freq1: 100e6
    freq10: 100e6
    freq11: 100e6
    freq12: 100e6
    freq13: 100e6
    freq14: 100e6
    freq15: 100e6
    freq16: 100e6
    freq17: 100e6
    freq18: 100e6
    freq19: 100e6
    freq2: 100e6
    freq20: 100e6
    freq21: 100e6
    freq22: 100e6
    freq23: 100e6
    freq24: 100e6
    freq25: 100e6
    freq26: 100e6
    freq27: 100e6
    freq28: 100e6
    freq29: 100e6
    freq3: 100e6
    freq30: 100e6
    freq31: 100e6
    freq4: 100e6
    freq5: 100e6
    freq6: 100e6
    freq7: 100e6
    freq8: 100e6
    freq9: 100e6
    gain0: '0'
    gain1: '10'
    gain10: '10'
    gain11: '10'
    gain12: '10'
    gain13: '10'
    gain14: '10'
    gain15: '10'
    gain16: '10'
    gain17: '10'
    gain18: '10'
    gain19: '10'
    gain2: '10'
    gain20: '10'
    gain21: '10'
    gain22: '10'
    gain23: '10'
    gain24: '10'
    gain25: '10'
    gain26: '10'
    gain27: '10'
    gain28: '10'
    gain29: '10'
    gain3: '10'
    gain30: '10'
    gain31: '10'
    gain4: '10'
    gain5: '10'
    gain6: '10'
    gain7: '10'
    gain8: '10'
    gain9: '10'
    gain_mode0: 'False'
    gain_mode1: 'False'
    gain_mode10: 'False'
    gain_mode11: 'False'
    gain_mode12: 'False'
    gain_mode13: 'False'
    gain_mode14: 'False'
    gain_mode15: 'False'
    gain_mode16: 'False'
    gain_mode17: 'False'
    gain_mode18: 'False'
    gain_mode19: 'False'
    gain_mode2: 'False'
    gain_mode20: 'False'
    gain_mode21: 'False'
    gain_mode22: 'False'
    gain_mode23: 'False'
    gain_mode24: 'False'
    gain_mode25: 'False'
    gain_mode26: 'False'
    gain_mode27: 'False'
    gain_mode28: 'False'
    gain_mode29: 'False'
    gain_mode3: 'False'
    gain_mode30: 'False'
    gain_mode31: 'False'
    gain_mode4: 'False'
    gain_mode5: 'False'
    gain_mode6: 'False'
    gain_mode7: 'False'
    gain_mode8: 'False'
    gain_mode9: 'False'
    if_gain0: '20'
    if_gain1: '20'
    if_gain10: '20'
    if_gain11: '20'
    if_gain12: '20'
    if_gain13: '20'
    if_gain14: '20'
    if_gain15: '20'
    if_gain16: '20'
    if_gain17: '20'
    if_gain18: '20'
    if_gain19: '20'
    if_gain2: '20'
    if_gain20: '20'
    if_gain21: '20'
    if_gain22: '20'
    if_gain23: '20'
    if_gain24: '20'
    if_gain25: '20'
    if_gain26: '20'
    if_gain27: '20'
    if_gain28: '20'
    if_gain29: '20'
    if_gain3: '20'
    if_gain30: '20'
    if_gain31: '20'
    if_gain4: '20'
    if_gain5: '20'
    if_gain6: '20'
    if_gain7: '20'
    if_gain8: '20'
    if_gain9: '20'
    iq_balance_mode0: '0'
    iq_balance_mode1: '0'
    iq_balance_mode10: '0'
    iq_balance_mode11: '0'
    iq_balance_mode12: '0'
    iq_balance_mode13: '0'
    iq_balance_mode14: '0'
    iq_balance_mode15: '0'
    iq_balance_mode16: '0'
    iq_balance_mode17: '0'
    iq_balance_mode18: '0'
    iq_balance_mode19: '0'
    iq_balance_mode2: '0'
    iq_balance_mode20: '0'
    iq_balance_mode21: '0'
    iq_balance_mode22: '0'
    iq_balance_mode23: '0'
    iq_balance_mode24: '0'
    iq_balance_mode25: '0'
    iq_balance_mode26: '0'
    iq_balance_mode27: '0'
    iq_balance_mode28: '0'
    iq_balance_mode29: '0'
    iq_balance_mode3: '0'
    iq_balance_mode30: '0'
    iq_balance_mode31: '0'
    iq_balance_mode4: '0'
    iq_balance_mode5: '0'
    iq_balance_mode6: '0'
    iq_balance_mode7: '0'
    iq_balance_mode8: '0'
    iq_balance_mode9: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    sample_rate: samp_rate
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 172.0]
    rotation: 0
    state: enabled
- name: prev_button
  id: variable_qtgui_msg_push_button
  parameters:
    comment: ''
    gui_hint: (0,0,1,1)
    label: Previous
    msgName: cmd
    relBackgroundColor: navy
    relFontColor: white
    type: string
    value: prev
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1096, 32.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '0.05'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'True'
    fc: center_freq
    fftsize: fft_size
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.025'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 168.0]
    rotation: 0
    state: enabled
- name: rational_resampler_xxx_0
  id: rational_resampler_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '5'
    fbw: '0'
    interp: '12'
    maxoutbuf: '0'
    minoutbuf: '0'
    taps: '[]'
    type: ccc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 400.0]
    rotation: 0
    state: enabled

connections:
- [analog_sig_source_x_0, '0', blocks_multiply_xx_0, '1']
- [analog_wfm_rcv_0, '0', blocks_multiply_const_vxx_0, '0']
- [blocks_complex_to_mag_squared_0, '0', epy_block_0, '0']
- [blocks_multiply_const_vxx_0, '0', audio_sink_0, '0']
- [blocks_multiply_xx_0, '0', low_pass_filter_0, '0']
- [blocks_stream_to_vector_0, '0', fft_vxx_0, '0']
- [blocks_throttle2_0, '0', blocks_multiply_xx_0, '0']
- [blocks_throttle2_0, '0', blocks_stream_to_vector_0, '0']
- [blocks_throttle2_0, '0', qtgui_freq_sink_x_0, '0']
- [epy_block_0, stations_out, blocks_message_debug_0, print]
- [epy_block_0, stations_out, epy_block_1, stations_in]
- [epy_block_1, freq_out, blocks_msgpair_to_var_0, inpair]
- [fft_vxx_0, '0', blocks_complex_to_mag_squared_0, '0']
- [low_pass_filter_0, '0', rational_resampler_xxx_0, '0']
- [next_button, pressed, epy_block_1, cmd_in]
- [osmosdr_source_0, '0', blocks_throttle2_0, '0']
- [prev_button, pressed, epy_block_1, cmd_in]
- [rational_resampler_xxx_0, '0', analog_wfm_rcv_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.11.0
